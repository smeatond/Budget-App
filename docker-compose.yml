services:
  database:
    image: postgres:17.2-alpine3.20
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    restart: unless-stopped
    volumes:
      - ./ba-pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  api:
    build:
      context: .
      dockerfile: DS.BA.API/Dockerfile
    volumes:
      - /app
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_URLS=http://localhost:5001
      - PPGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - DATABASE_CONNECTION_STRING=User ID=${PGUSER};Password=${PGPASSWORD};Server=localhost;Port=5432;Database=${PGDATABASE};Pooling=true;
    expose:
      - 5001
    depends_on:
      - database
  web:
    build:
      context: .
      dockerfile: DS.BA.Web/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - api
volumes:
  ba-volume: